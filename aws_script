import numpy as np
import itertools

def find_closese_sum(numbers, targets):
     numbers = numbers[:]
     for t in targets:
          if not numbers:
               break
          combs = sum([list(itertools.combinations(numbers, r)) for r in range(1, len(numbers)+1)], [])
          
          sums = np.asarray(list(map(sum, combs)))
          bestcomb = combs[np.argmin(np.abs(np.asarray(sums) - t))]
          numbers = list(set(numbers).difference(bestcomb))
          print("Target: {},  combination: {}".format(t, bestcomb))

targets = [14.9,27.5,78.1]
numbers = [1.1,5.1,5.1,10.1,7.2,8.0,11.2,13.1,20.5,1.1,5.1,5.1,10.1,7.2,8.0,11.2,13.1,20.5]
find_closese_sum(numbers, targets)
